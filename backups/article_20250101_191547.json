{
  "title": "如何使用 Notion 来同步管理你的博客和微信公",
  "content": "\n    <div style=\"font-size: 14px; line-height: 1.8; color: #333;\">\n        <img src=\"https://images.unsplash.com/photo-1523275335684-37898b6baf30?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb\" style=\"max-width: 100%; height: auto; display: block; margin: 20px auto;\" />\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">Notion + Jekyll + 公众号的详细实现</h2>\n<p>使用 Notion 写作，可以享受它优秀的排版和协作功能；然后通过 API 将文章同步到 Jekyll 和微信公众号，实现一站式写作和多平台发布。以下是详细步骤：</p>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">1. 准备工作</h2>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">1.1 配置 Notion API</h2>\n<ol>\n<li>登录你的 Notion 账号，访问 Notion Developers。</li>\n<li>创建一个新的 Integration：</li>\n<li>在 Notion 的数据库页面，点击右上角「共享 (Share)」，将你的 Integration 添加到该页面。</li>\n</ol>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">1.2 准备 Jekyll 环境</h2>\n<ol>\n<li>确保你的 Jekyll 环境正常运行（包括本地或托管在 GitHub Pages）。</li>\n<li>文章存储路径一般在 _posts 文件夹中，格式为 Markdown (.md) 文件。</li>\n</ol>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">1.3 微信公众号开发接口</h2>\n<ol>\n<li>登录你的微信公众号后台，获取 AppID 和 AppSecret。</li>\n<li>配置微信公众号接口，确保可以调用 API（如发布文章接口）。</li>\n</ol>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">2. 实现流程</h2>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">2.1 从 Notion 获取文章</h2>\n<p>通过 Notion API，提取你在 Notion 数据库中的文章内容，转化为 Markdown 文件。</p>\n<p>示例代码（Python）：</p>\n\n            <div style=\"position: relative; margin: 20px 0;\">\n                <pre style=\"background-color: #f6f8fa; padding: 16px; border-radius: 6px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; line-height: 1.5; tab-size: 4;\">\n                    <code class=\"language-python\" style=\"color: #24292e;\">\n                        import requests\nimport json\n\nNOTION_API_TOKEN = \"your_notion_integration_token\"\nDATABASE_ID = \"your_notion_database_id\"\n\nheaders = {\n    \"Authorization\": f\"Bearer {NOTION_API_TOKEN}\",\n    \"Content-Type\": \"application/json\",\n    \"Notion-Version\": \"2022-06-28\",\n}\n\n# è·å Notion æ°æ®åºä¸­çé¡µé¢\ndef fetch_notion_pages():\n    url = f\"https://api.notion.com/v1/databases/{DATABASE_ID}/query\"\n    response = requests.post(url, headers=headers)\n    pages = response.json().get(\"results\", [])\n    return pages\n\n# è·ååä¸ªé¡µé¢çè¯¦ç»åå®¹\ndef fetch_page_content(page_id):\n    url = f\"https://api.notion.com/v1/blocks/{page_id}/children\"\n    response = requests.get(url, headers=headers)\n    content = response.json()\n    return content\n\n# ç¤ºä¾è°ç¨\npages = fetch_notion_pages()\nfor page in pages:\n    print(page[\"properties\"][\"Name\"][\"title\"][0][\"text\"][\"content\"])\n\n                    </code>\n                </pre>\n                <div style=\"position: absolute; top: 8px; right: 12px; font-size: 12px; color: #6a737d;\">\n                    python\n                </div>\n            </div>\n            \n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">2.2 同步到 Jekyll</h2>\n<p>将提取到的文章内容转化为 Markdown 文件，并存储到 Jekyll 的 _posts 文件夹中。</p>\n<p>示例代码（继续 Python）：</p>\n\n            <div style=\"position: relative; margin: 20px 0;\">\n                <pre style=\"background-color: #f6f8fa; padding: 16px; border-radius: 6px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; line-height: 1.5; tab-size: 4;\">\n                    <code class=\"language-python\" style=\"color: #24292e;\">\n                        import os\nfrom datetime import datetime\n\n# å°æç« åå®¹è½¬ä¸º Markdown æä»¶\ndef save_to_jekyll(title, content):\n    date = datetime.now().strftime(\"%Y-%m-%d\")\n    filename = f\"./_posts/{date}-{title.replace(' ', '-').lower()}.md\"\n    with open(filename, \"w\", encoding=\"utf-8\") as file:\n        file.write(f\"---\n\")\n        file.write(f\"title: {title}\n\")\n        file.write(f\"date: {date}\n\")\n        file.write(f\"layout: post\n\")\n        file.write(f\"---\n\n\")\n        file.write(content)\n    print(f\"Saved to Jekyll: {filename}\")\n\n# ç¤ºä¾è°ç¨\nfor page in pages:\n    title = page[\"properties\"][\"Name\"][\"title\"][0][\"text\"][\"content\"]\n    content = \"æç« åå®¹ï¼æ ¹æ® fetch_page_content æåå·ä½æ®µè½ï¼\"\n    save_to_jekyll(title, content)\n\n                    </code>\n                </pre>\n                <div style=\"position: absolute; top: 8px; right: 12px; font-size: 12px; color: #6a737d;\">\n                    python\n                </div>\n            </div>\n            \n<p>运行后，你的文章会自动存储到 Jekyll 的 _posts 文件夹中。使用 jekyll serve 预览效果，或者推送到 GitHub Pages。</p>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">2.3 同步到微信公众号</h2>\n<p>将文章内容通过微信公众号 API 发布到公众号平台。</p>\n<p>示例代码（微信公众号）：</p>\n\n            <div style=\"position: relative; margin: 20px 0;\">\n                <pre style=\"background-color: #f6f8fa; padding: 16px; border-radius: 6px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; line-height: 1.5; tab-size: 4;\">\n                    <code class=\"language-python\" style=\"color: #24292e;\">\n                        # è·åå¬ä¼å· Access Token\ndef get_access_token(app_id, app_secret):\n    url = f\"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid={app_id}&secret={app_secret}\"\n    response = requests.get(url).json()\n    return response.get(\"access_token\")\n\n# åå¸æç« \ndef publish_to_wechat(access_token, title, content):\n    url = f\"https://api.weixin.qq.com/cgi-bin/draft/add?access_token={access_token}\"\n    data = {\n        \"articles\": [\n            {\n                \"title\": title,\n                \"content\": content,\n                \"author\": \"ä½è\",\n                \"digest\": \"æè¦åå®¹\",\n                \"show_cover_pic\": 1,\n            }\n        ]\n    }\n    response = requests.post(url, json=data).json()\n    print(response)\n\n# ç¤ºä¾è°ç¨\nAPP_ID = \"your_wechat_app_id\"\nAPP_SECRET = \"your_wechat_app_secret\"\naccess_token = get_access_token(APP_ID, APP_SECRET)\n\n# åå¸åå®¹\nfor page in pages:\n    title = page[\"properties\"][\"Name\"][\"title\"][0][\"text\"][\"content\"]\n    content = \"æç« åå®¹ï¼æ ¹æ® fetch_page_content æåå·ä½æ®µè½ï¼\"\n    publish_to_wechat(access_token, title, content)\n\n                    </code>\n                </pre>\n                <div style=\"position: absolute; top: 8px; right: 12px; font-size: 12px; color: #6a737d;\">\n                    python\n                </div>\n            </div>\n            \n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">3. 自动化整合</h2>\n<p>你可以将以上流程整合为一个自动化脚本，实现全流程自动运行：</p>\n<ol>\n<li>获取 Notion 数据库内容 → 提取标题和正文。</li>\n<li>保存为 Markdown 文件 → 同步到 Jekyll 博客。</li>\n<li>发布到微信公众号 → 调用公众号 API。</li>\n</ol>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">定时自动化</h2>\n<ul>\n<li>使用 crontab 或 Windows Task Scheduler 定时运行脚本，实现每天定时同步。</li>\n<li>结合 Git Hooks 或 CI/CD 工具（如 GitHub Actions），在提交文章后自动同步到 Jekyll 和公众号。</li>\n</ul>\n    </div>\n    \n    <hr />\n    <p style=\"color: #999; font-size: 12px;\">\n        本文由 Notion 自动同步至微信公众号<br>\n        发布时间：2025-01-01 19:15:37\n    </p>\n    ",
  "timestamp": "20250101_191547"
}