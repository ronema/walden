{
  "title": "Walden’s Blog",
  "content": "\n    <div style=\"font-size: 14px; line-height: 1.8; color: #333;\">\n        <h1 style=\"font-size: 28px; margin: 32px 0 24px;\">notion 同步到 jekyll 页面的关键问题</h1>\n\n    <div style=\"font-size: 14px; line-height: 1.8; color: #333;\">\n        <img src=\"https://images.unsplash.com/photo-1697439838188-aaa48162214f?q=80&w=3270&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\" style=\"max-width: 100%; height: auto; display: block; margin: 20px auto;\" />\n<p>问题主要出在两个地方：</p>\n<ol>\n<li>页面类型的混淆：</li>\n<li>API 调用方式的改进：</li>\n<li>内容获取逻辑：</li>\n<li>Markdown 转换：</li>\n</ol>\n<p>这就是为什么最新的代码能工作的原因。我们：</p>\n<ol>\n<li>正确识别了内容类型（页面而不是数据库）</li>\n<li>使用了正确的 API 调用方式</li>\n<li>正确处理了页面的块结构</li>\n<li>将 Notion 的格式正确转换为 Markdown</li>\n</ol>\n    </div>\n    \n    <hr />\n    <p style=\"color: #999; font-size: 12px;\">\n        本文由 Notion 自动同步至微信公众号<br>\n        发布时间：2025-01-01 18:58:26\n    </p>\n    \n<h1 style=\"font-size: 28px; margin: 32px 0 24px;\">Jekyll网站互动设计疑问点</h1>\n\n    <div style=\"font-size: 14px; line-height: 1.8; color: #333;\">\n        <h2 style=\"font-size: 20px; margin: 24px 0 16px;\">页面访问次数统计</h2>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">Q: 用jekyll部署到GitHub的网站，能加页面的访问次数么？</h2>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">A: 是的，可以通过以下方法实现页面访问次数统计：</h2>\n<ul>\n<li>第三方统计服务：使用Google Analytics等工具，它们可以提供页面访问次数的统计和分析。</li>\n<li>Jekyll插件：使用jekyll-seo-tag等插件，帮助添加必要的元数据以优化SEO，间接影响访问量。</li>\n<li>手动添加计数器：通过后端服务，如Netlify Functions或AWS Lambda，来处理和存储访问次数。</li>\n<li>静态站点友好的分析工具：使用Plausible或Matomo等工具，它们专为静态站点设计，无需服务器端代码。</li>\n<li>浏览器缓存和本地存储：利用localStorage等浏览器存储机制来模拟访问次数统计，但这种方法不适用于跨设备同步。</li>\n<li>云函数：使用云服务提供商的云函数来记录和存储访问次数。</li>\n<li>GitHub Actions：创建GitHub Actions工作流，自动更新存储访问次数的文件。</li>\n</ul>\n<h2 style=\"font-size: 20px; margin: 24px 0 16px;\">集成点赞功能</h2>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">Q: 那我可以集成一个点赞功能到网站的文章详情么，不需要记录人的信息，每个人点一下，就一个赞？</h2>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">A: 可以集成点赞功能，具体步骤如下：</h2>\n<ol>\n<li>添加点赞按钮：在文章详情页添加一个点赞按钮，用户可以通过点击来表达喜好。</li>\n<li>JavaScript处理：使用JavaScript监听点赞按钮的点击事件，并发送AJAX请求到服务器。</li>\n<li>后端服务更新：由于GitHub Pages不支持服务器端代码，可以使用第三方服务或客户端技巧（如localStorage）来模拟点赞功能，但这种方法不会持久化点赞数据。</li>\n</ol>\n<h2 style=\"font-size: 20px; margin: 24px 0 16px;\">集成评论功能</h2>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">Q: 那么评论呢，可以加么？</h2>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">A: 可以添加评论功能，以下是几种集成方法：</h2>\n<ol>\n<li>Disqus：一个广泛使用的第三方评论服务，提供简单集成方式。</li>\n<li>Facebook Comments：基于Facebook账号的评论系统，方便用户使用社交媒体账号评论。</li>\n<li>Commento：轻量级、开源的评论系统，适合注重隐私的用户，可以自托管。</li>\n<li>Gitalalk：基于GitHub Issues的评论插件，使用GitHub账号进行身份验证，Gitalk GitHub。</li>\n<li>Utterances：使用GitHub Issues存储评论的轻量级评论系统，支持Markdown和代码块，Utterances GitHub。</li>\n<li>Staticman：通过API接收评论并将它们作为Pull Requests发送到GitHub仓库，适合静态站点，Staticman GitHub。</li>\n</ol>\n<h2 style=\"font-size: 20px; margin: 24px 0 16px;\">评论审核要求</h2>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">Q: 但是评论的话，在国内是不是涉及到审核，不能直接在没有申请的情况下使用？</h2>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">A: 是的，根据中国法律法规，提供和使用跟帖评论服务需要遵守相关规定：</h2>\n<ul>\n<li>实名认证：用户需要通过移动电话号码、身份证件号码等方式进行实名认证。</li>\n<li>信息保护：建立健全用户个人信息保护制度。</li>\n<li>先审后发制度：对新闻信息提供跟帖评论服务的，应当建立先审后发制度。</li>\n<li>审核管理：建立健全跟帖评论审核管理、实时巡查、应急处置、举报受理等信息安全管理制度。</li>\n<li>审核编辑队伍：配备与服务规模相适应的审核编辑队伍，加强跟帖评论审核培训。</li>\n</ul>\n<h2 style=\"font-size: 20px; margin: 24px 0 16px;\">Jekyll网站SEO优化</h2>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">Q: 我的jekyll网站如何优化seo？</h2>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">A: 优化Jekyll网站的SEO可以采取以下措施：</h2>\n<ol>\n<li>使用Jekyll SEO插件：如jekyll-seo-tag，它可以帮助添加必要的元标记以提高搜索引擎排名。</li>\n<li>优化页面标题和描述：确保每个页面都有独特的标题和描述元标签。</li>\n<li>生成XML站点地图：使用jekyll-sitemapgem插件来生成站点地图，有助于搜索引擎更好地索引网站。</li>\n<li>添加robots.txt文件：在网站根目录下创建robots.txt文件，指向sitemap，以便搜索引擎爬虫可以更容易地发现和索引网站内容。</li>\n<li>使用语义化的HTML标签：使用h1, h2, h3等标题标签来组织内容，有助于搜索引擎理解页面结构。</li>\n<li>优化内容和关键词：确保内容是原创的，并且深入探讨主题，同时合理使用关键词。</li>\n<li>提高网站性能：压缩资源文件，使用高效的图像格式，利用浏览器缓存机制。</li>\n<li>提升用户体验：采用响应式设计，简洁的界面设计，减少不必要的元素。</li>\n<li>实施技术SEO实践：使用HTTPS协议，确保网站支持移动优先索引。</li>\n</ol>\n    </div>\n    \n    <hr />\n    <p style=\"color: #999; font-size: 12px;\">\n        本文由 Notion 自动同步至微信公众号<br>\n        发布时间：2025-01-01 18:58:27\n    </p>\n    \n<h1 style=\"font-size: 28px; margin: 32px 0 24px;\">如何使用 Notion 来同步管理你的博客和微信公众号</h1>\n\n    <div style=\"font-size: 14px; line-height: 1.8; color: #333;\">\n        <img src=\"https://images.unsplash.com/photo-1523275335684-37898b6baf30?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb\" style=\"max-width: 100%; height: auto; display: block; margin: 20px auto;\" />\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">Notion + Jekyll + 公众号的详细实现</h2>\n<p>使用 Notion 写作，可以享受它优秀的排版和协作功能；然后通过 API 将文章同步到 Jekyll 和微信公众号，实现一站式写作和多平台发布。以下是详细步骤：</p>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">1. 准备工作</h2>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">1.1 配置 Notion API</h2>\n<ol>\n<li>登录你的 Notion 账号，访问 Notion Developers。</li>\n<li>创建一个新的 Integration：</li>\n<li>在 Notion 的数据库页面，点击右上角「共享 (Share)」，将你的 Integration 添加到该页面。</li>\n</ol>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">1.2 准备 Jekyll 环境</h2>\n<ol>\n<li>确保你的 Jekyll 环境正常运行（包括本地或托管在 GitHub Pages）。</li>\n<li>文章存储路径一般在 _posts 文件夹中，格式为 Markdown (.md) 文件。</li>\n</ol>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">1.3 微信公众号开发接口</h2>\n<ol>\n<li>登录你的微信公众号后台，获取 AppID 和 AppSecret。</li>\n<li>配置微信公众号接口，确保可以调用 API（如发布文章接口）。</li>\n</ol>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">2. 实现流程</h2>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">2.1 从 Notion 获取文章</h2>\n<p>通过 Notion API，提取你在 Notion 数据库中的文章内容，转化为 Markdown 文件。</p>\n<p>示例代码（Python）：</p>\n<pre style=\"background-color: #f6f8fa; padding: 16px; border-radius: 6px; overflow: auto;\"><code class=\"python\">import requests\nimport json\n\nNOTION_API_TOKEN = \"your_notion_integration_token\"\nDATABASE_ID = \"your_notion_database_id\"\n\nheaders = {\n    \"Authorization\": f\"Bearer {NOTION_API_TOKEN}\",\n    \"Content-Type\": \"application/json\",\n    \"Notion-Version\": \"2022-06-28\",\n}\n\n# 获取 Notion 数据库中的页面\ndef fetch_notion_pages():\n    url = f\"https://api.notion.com/v1/databases/{DATABASE_ID}/query\"\n    response = requests.post(url, headers=headers)\n    pages = response.json().get(\"results\", [])\n    return pages\n\n# 获取单个页面的详细内容\ndef fetch_page_content(page_id):\n    url = f\"https://api.notion.com/v1/blocks/{page_id}/children\"\n    response = requests.get(url, headers=headers)\n    content = response.json()\n    return content\n\n# 示例调用\npages = fetch_notion_pages()\nfor page in pages:\n    print(page[\"properties\"][\"Name\"][\"title\"][0][\"text\"][\"content\"])\n</code></pre>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">2.2 同步到 Jekyll</h2>\n<p>将提取到的文章内容转化为 Markdown 文件，并存储到 Jekyll 的 _posts 文件夹中。</p>\n<p>示例代码（继续 Python）：</p>\n<pre style=\"background-color: #f6f8fa; padding: 16px; border-radius: 6px; overflow: auto;\"><code class=\"python\">import os\nfrom datetime import datetime\n\n# 将文章内容转为 Markdown 文件\ndef save_to_jekyll(title, content):\n    date = datetime.now().strftime(\"%Y-%m-%d\")\n    filename = f\"./_posts/{date}-{title.replace(' ', '-').lower()}.md\"\n    with open(filename, \"w\", encoding=\"utf-8\") as file:\n        file.write(f\"---\\n\")\n        file.write(f\"title: {title}\\n\")\n        file.write(f\"date: {date}\\n\")\n        file.write(f\"layout: post\\n\")\n        file.write(f\"---\\n\\n\")\n        file.write(content)\n    print(f\"Saved to Jekyll: {filename}\")\n\n# 示例调用\nfor page in pages:\n    title = page[\"properties\"][\"Name\"][\"title\"][0][\"text\"][\"content\"]\n    content = \"文章内容（根据 fetch_page_content 提取具体段落）\"\n    save_to_jekyll(title, content)\n</code></pre>\n<p>运行后，你的文章会自动存储到 Jekyll 的 _posts 文件夹中。使用 jekyll serve 预览效果，或者推送到 GitHub Pages。</p>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">2.3 同步到微信公众号</h2>\n<p>将文章内容通过微信公众号 API 发布到公众号平台。</p>\n<p>示例代码（微信公众号）：</p>\n<pre style=\"background-color: #f6f8fa; padding: 16px; border-radius: 6px; overflow: auto;\"><code class=\"python\"># 获取公众号 Access Token\ndef get_access_token(app_id, app_secret):\n    url = f\"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid={app_id}&secret={app_secret}\"\n    response = requests.get(url).json()\n    return response.get(\"access_token\")\n\n# 发布文章\ndef publish_to_wechat(access_token, title, content):\n    url = f\"https://api.weixin.qq.com/cgi-bin/draft/add?access_token={access_token}\"\n    data = {\n        \"articles\": [\n            {\n                \"title\": title,\n                \"content\": content,\n                \"author\": \"作者\",\n                \"digest\": \"摘要内容\",\n                \"show_cover_pic\": 1,\n            }\n        ]\n    }\n    response = requests.post(url, json=data).json()\n    print(response)\n\n# 示例调用\nAPP_ID = \"your_wechat_app_id\"\nAPP_SECRET = \"your_wechat_app_secret\"\naccess_token = get_access_token(APP_ID, APP_SECRET)\n\n# 发布内容\nfor page in pages:\n    title = page[\"properties\"][\"Name\"][\"title\"][0][\"text\"][\"content\"]\n    content = \"文章内容（根据 fetch_page_content 提取具体段落）\"\n    publish_to_wechat(access_token, title, content)\n</code></pre>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">3. 自动化整合</h2>\n<p>你可以将以上流程整合为一个自动化脚本，实现全流程自动运行：</p>\n<ol>\n<li>获取 Notion 数据库内容 → 提取标题和正文。</li>\n<li>保存为 Markdown 文件 → 同步到 Jekyll 博客。</li>\n<li>发布到微信公众号 → 调用公众号 API。</li>\n</ol>\n<h2 style=\"font-size: 18px; margin: 24px 0 16px;\">定时自动化</h2>\n<ul>\n<li>使用 crontab 或 Windows Task Scheduler 定时运行脚本，实现每天定时同步。</li>\n<li>结合 Git Hooks 或 CI/CD 工具（如 GitHub Actions），在提交文章后自动同步到 Jekyll 和公众号。</li>\n</ul>\n    </div>\n    \n    <hr />\n    <p style=\"color: #999; font-size: 12px;\">\n        本文由 Notion 自动同步至微信公众号<br>\n        发布时间：2025-01-01 18:58:29\n    </p>\n    \n<h1 style=\"font-size: 28px; margin: 32px 0 24px;\">如何将 notion 内容同步到 GitHub 的 jekyll 博客中</h1>\n\n    <div style=\"font-size: 14px; line-height: 1.8; color: #333;\">\n        <p>一，申</p>\n    </div>\n    \n    <hr />\n    <p style=\"color: #999; font-size: 12px;\">\n        本文由 Notion 自动同步至微信公众号<br>\n        发布时间：2025-01-01 18:58:30\n    </p>\n    \n    </div>\n    \n    <hr />\n    <p style=\"color: #999; font-size: 12px;\">\n        本文由 Notion 自动同步至微信公众号<br>\n        发布时间：2025-01-01 18:58:30\n    </p>\n    ",
  "timestamp": "20250101_185830"
}